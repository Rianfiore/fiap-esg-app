name: CI/CD Pipeline - CompareJa App

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  ANDROID_COMPILE_SDK: 34
  ANDROID_BUILD_TOOLS: 34.0.0
  ANDROID_SDK_TOOLS: 11076708

jobs:
  # Job de Build e Testes
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
      
    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: ${{ env.ANDROID_COMPILE_SDK }}
        build-tools: ${{ env.ANDROID_BUILD_TOOLS }}
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Cache Android SDK
      uses: actions/cache@v3
      with:
        path: |
          ~/.android
        key: ${{ runner.os }}-android-${{ hashFiles('**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-android-
          
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Run unit tests
      run: ./gradlew testDebugUnitTest
      
    - name: Run lint checks
      run: ./gradlew lintDebug
      
    - name: Build debug APK
      run: ./gradlew assembleDebug
      
    - name: Build release APK
      run: ./gradlew assembleRelease
      
    - name: Upload APK artifacts
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: app/build/outputs/apk/debug/app-debug.apk
        
    - name: Upload APK artifacts (Release)
      uses: actions/upload-artifact@v4
      with:
        name: app-release
        path: app/build/outputs/apk/release/app-release.apk

  # Job de Deploy para Staging
  deploy-staging:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
      
    - name: Download APK artifact
      uses: actions/download-artifact@v4
      with:
        name: app-debug
        path: ./apk/
        
    - name: Setup Firebase CLI
      run: |
        npm install -g firebase-tools
        
    - name: Deploy to Firebase App Distribution (Staging)
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      run: |
        firebase appdistribution:distribute ./apk/app-debug.apk \
          --app ${{ secrets.FIREBASE_APP_ID_STAGING }} \
          --groups "testers" \
          --release-notes "Staging build - $(date)"

  # Job de Deploy para Produção
  deploy-production:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
      
    - name: Download APK artifact
      uses: actions/download-artifact@v4
      with:
        name: app-release
        path: ./apk/
        
    - name: Setup Firebase CLI
      run: |
        npm install -g firebase-tools
        
    - name: Deploy to Firebase App Distribution (Production)
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      run: |
        firebase appdistribution:distribute ./apk/app-release.apk \
          --app ${{ secrets.FIREBASE_APP_ID_PRODUCTION }} \
          --groups "production-testers" \
          --release-notes "Production build - $(date)"

  # Job de Relatórios
  generate-reports:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
      
    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: ${{ env.ANDROID_COMPILE_SDK }}
        build-tools: ${{ env.ANDROID_BUILD_TOOLS }}
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Generate test coverage report
      run: ./gradlew jacocoTestReport
      
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: app/build/reports/jacoco/
