name: 🧪 TEST Pipeline - CompareJa

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  ANDROID_COMPILE_SDK: 34
  ANDROID_BUILD_TOOLS: 34.0.0

jobs:
  unit-tests:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4
      
    - name: ☕ Setup Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 📱 Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: ${{ env.ANDROID_COMPILE_SDK }}
        build-tools: ${{ env.ANDROID_BUILD_TOOLS }}
        
    - name: 💾 Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: 🔧 Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: 🧪 Run Unit Tests
      run: ./gradlew testDebugUnitTest
      
    - name: 📊 Generate Test Coverage Report
      run: ./gradlew jacocoTestReport
      
    - name: 📤 Upload Test Results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: app/build/test-results/
        retention-days: 30
        
    - name: 📤 Upload Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: app/build/reports/jacoco/
        retention-days: 30
        
    - name: 📊 Test Summary
      run: |
        echo "✅ Testes unitários concluídos!"
        echo "📊 Relatório de cobertura gerado em: app/build/reports/jacoco/"

  lint-tests:
    name: 🔍 Code Quality Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4
      
    - name: ☕ Setup Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 📱 Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: ${{ env.ANDROID_COMPILE_SDK }}
        build-tools: ${{ env.ANDROID_BUILD_TOOLS }}
        
    - name: 💾 Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: 🔧 Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: 🔍 Run Lint Analysis
      run: ./gradlew lintDebug
      
    - name: 📤 Upload Lint Results
      uses: actions/upload-artifact@v4
      with:
        name: lint-results
        path: app/build/reports/lint-results-debug.html
        retention-days: 30
        
    - name: 📊 Lint Summary
      run: |
        echo "✅ Análise de código concluída!"
        echo "📊 Relatório de lint disponível em: app/build/reports/lint-results-debug.html"
